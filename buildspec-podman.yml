version: 0.2

# Alternative buildspec.yml for Podman-based environments
# Note: AWS CodeBuild primarily uses Docker, but this shows how to use Podman
# For production AWS deployments, use the standard buildspec.yml with Docker

# Environment variables that should be set in CodeBuild project:
# - ECR_REPOSITORY_URI: The full URI of your ECR repository
# - AWS_DEFAULT_REGION: AWS region (e.g., us-east-1)
# - AWS_ACCOUNT_ID: Your AWS account ID
# - CONTAINER_NAME: Name for the container in task definition (default: fastapi-container)

env:
  variables:
    CONTAINER_NAME: fastapi-container

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo Install phase started on `date`
      - echo Installing Podman...
      # Install Podman (for Amazon Linux 2)
      - yum update -y
      - yum install -y podman
      - echo Checking Podman version
      - podman --version
      - echo Checking AWS CLI version
      - aws --version

  pre_build:
    commands:
      - echo Pre-build phase started on `date`
      - echo Logging in to Amazon ECR...
      - echo ECR Repository URI is $ECR_REPOSITORY_URI
      - echo AWS Region is $AWS_DEFAULT_REGION
      - echo AWS Account ID is $AWS_ACCOUNT_ID
      - |
        if [ -z "$ECR_REPOSITORY_URI" ]; then
          echo "ERROR: ECR_REPOSITORY_URI environment variable is not set"
          exit 1
        fi
      # Login to ECR using Podman
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | podman login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Logged in to ECR successfully with Podman
      - IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION:-latest}
      - echo Image tag will be $IMAGE_TAG
      - echo Commit ID is $CODEBUILD_RESOLVED_SOURCE_VERSION
      
  build:
    commands:
      - echo Build phase started on `date`
      - echo Building image with Podman...
      - echo "Building image: $ECR_REPOSITORY_URI:$IMAGE_TAG"
      - podman build -t $ECR_REPOSITORY_URI:$IMAGE_TAG .
      - echo "Tagging image as latest: $ECR_REPOSITORY_URI:latest"
      - podman tag $ECR_REPOSITORY_URI:$IMAGE_TAG $ECR_REPOSITORY_URI:latest
      - echo Podman build completed successfully
      
  post_build:
    commands:
      - echo Post-build phase started on `date`
      - echo Pushing images to ECR with Podman...
      - echo "Pushing image with tag: $IMAGE_TAG"
      - podman push $ECR_REPOSITORY_URI:$IMAGE_TAG
      - echo "Pushing image with tag: latest"
      - podman push $ECR_REPOSITORY_URI:latest
      - echo Images pushed successfully
      - echo Creating imagedefinitions.json for ECS deployment...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $ECR_REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Contents of imagedefinitions.json:
      - cat imagedefinitions.json
      - echo Build completed successfully on `date`
      
artifacts:
  files:
    - imagedefinitions.json
  name: FastAPIBuildArtifact

# Optional: Store build logs in CloudWatch
reports:
  podman-build-report:
    files:
      - '**/*'
    name: PodmanBuildReport
    file-format: 'CUCUMBERJSON'

# Cache for faster builds (Podman specific)
cache:
  paths:
    - '/root/.local/share/containers/**/*'